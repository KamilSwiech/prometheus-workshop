---
alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 2m
      group_interval: 10m
      repeat_interval: 24h
      receiver: default
      routes: 
             - match:
                severity: critical
               receiver: pagerduty
             - match:
                severity: warning
               receiver: mattermost
    receivers:
    - name: default
    - name: pagerduty
      pagerduty_configs:
       - service_key: 19ff063bbadc4bb38ea1d9c7ea92bbee
         send_resolved: true
         severity: '{{ .CommonAnnotations.severity }}'
    - name: mattermost
      slack_configs:
       - api_url: "https://talk.gigaset-devnet.pl/hooks/8imzn5o7obfs8eow174kciioxr"
         username: '{{ template "slack.default.username" . }}'
         color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
         title: '{{ template "slack.default.title" . }}'
         title_link: '{{ template "slack.default.titlelink" . }}'
         pretext: '**{{ .CommonAnnotations.summary }}**'
         text: |-
           {{- template  "slack.default.text" . -}}
         fallback: '{{ template "slack.default.fallback" . }}'
         icon_emoji: '{{ template "slack.default.iconemoji" . }}'
         icon_url: '{{ template "slack.default.iconurl" . }}'
    templates:
       - '/etc/alertmanager/configmaps/alertmanager-templates/*.tmpl'
  alertmanagerSpec:
    configMaps:
         - "alertmanager-templates"
    logFormat: logfmt
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 100Mi
grafana:
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 10m
      memory: 100Mi
prometheus:
  prometheusSpec:
    externalLabels:
       cluster: kind
    tolerations:
     - key: "key"
       operator: "Equal"
       value: "value"
       effect: "NoSchedule"
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 400Mi
  additionalServiceMonitors: 
    - name: "pop-prometheus-operator-cloud-app"
      selector:
        matchLabels:
          app.kubernetes.io/type: cloud-app      
      namespaceSelector:
        matchNames: 
          - gnet
      endpoints: 
        - port: http
          path: /actuator/prometheus
prometheus-node-exporter:
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 10m
      memory: 32Mi
prometheusOperator:
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
